- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 7
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package: 
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      comment: roboshop system user
      system: true
      shell: /sbin/nologin
      home: /app

  # it's safe to remove direcotry, because if we run 2nd time it will download freshly, no error if dosen't exist.
  - name: remove existing folder
    ansible.builtin.file:
      path: /app
      state: absent
      
  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: delecte catalogue file
    ansible.builtin.file:
      path: /etc/catalogue.zip
      state: absent
  
  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: unzip catalogue
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
   
  - name: install dependencies
    community.general.npm:
      path: /app/ 

  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connnect to mongodb catalogue
    ansible.builtin.command: mongosh mongodb.daws86s.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  # - name: evaluate cataalogue database
  #   community.mongodb.mongodb_shell:
  #     login_host: mongodb.daws86s.fun
  #     eval: db.getMongo().getDBNames().indexOf('catalogue')
  #   register: catalogue_output

  # - name: print catalogue output
  #   ansible.builtin.debug:
  #     msg: "{{ catalogue_output }}"

  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.manjunatha.space </app/db/master-data.js
    when: catalogue_output.stdout | int < 0

  # - name: start and enable cataalogue
  #   ansible.builtin.service:
  #     name: catalogue
  #     enabled: yes
  #     state: started

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: catalogue
      enabled: true
      state: started
      daemon_reload: true


